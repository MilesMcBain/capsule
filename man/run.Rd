% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run.R
\name{run_callr}
\alias{run_callr}
\alias{run}
\title{run functions in the capsule}
\usage{
run_callr(func, ...)

run(code)
}
\arguments{
\item{func}{a function to run in the capsule context, as per the
\code{\link[callr:r]{callr::r()}} interface.}

\item{...}{additional arguments passed to \code{callr::r()}}

\item{code}{the body of function to be run in the
capsule context. See Details.}
}
\value{
output of \code{func}
}
\description{
run function in a new process in the capsule
}
\details{
Execute the supplied function in the context of the capsule library using
\code{callr::r}. This ensures code is run in a new R process that will not be
contaminated by the state of the interactive development environment.
}
\section{Lockfile}{

At a minimum, an \code{renv} lockfile must be present in the current working
directory. The capsule library will be generated from the lockfile if it
does not exist. Use \code{create()} to make the lockfile.
}

\section{Details}{

\code{run} is a more convenient interface to \code{run_callr}, which inserts the
\code{code} argument into
the body of a function, to be run in a child R process. The code is passed
through to the function body using non-standard evaluation. If edge cases
arise due to non-standard evaluation, prefer \code{run_callr}.
}

\examples{
/dontrun{
run_callr(function() {library(tidyverse)})
run(library(tidyverse))
By default rmarkdown::render looks into the .GlobalEnv:
run_session(rmarkdown::render("./analysis.Rmd"))
}
}
\seealso{
\code{\link[callr:r]{callr::r()}} for detailed calling semantics, \code{\link[=create]{create()}} to make the
lockfile. \code{\link[=run]{run()}} for a lighter weight alternative.
}
\author{
Miles McBain
}
