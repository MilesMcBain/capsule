% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run.R
\name{run_rscript}
\alias{run_rscript}
\title{Run an R script in a new process in the capsule}
\usage{
run_rscript(path, ..., show = TRUE)
}
\arguments{
\item{path}{The path to the R script}

\item{...}{
  Arguments passed on to \code{\link[callr:rscript]{callr::rscript}}
  \describe{
    \item{\code{script}}{Path of the script to run.}
    \item{\code{cmdargs}}{Command line arguments.}
    \item{\code{libpath}}{The library path.}
    \item{\code{repos}}{The \code{repos} option. If \code{NULL}, then no
\code{repos} option is set. This options is only used if
\code{user_profile} or \code{system_profile} is set \code{FALSE},
as it is set using the system or the user profile.}
    \item{\code{stdout}}{Optionally a file name to send the standard output to.}
    \item{\code{stderr}}{Optionally a file name to send the standard error to.
It may be the same as \code{stdout}, in which case standard error is
redirected to standard output. It can also be the special string
\code{"2>&1"}, in which case standard error will be redirected to standard
output.}
    \item{\code{poll_connection}}{Whether to have a control connection to
the process. This is used to transmit messages from the subprocess
to the parent.}
    \item{\code{echo}}{Whether to echo the complete command run by \code{rcmd}.}
    \item{\code{callback}}{A function to call for each line of the standard
output and standard error from the child process. It works together
with the \code{show} option; i.e. if \code{show = TRUE}, and a
callback is provided, then the output is shown of the screen, and the
callback is also called.}
    \item{\code{block_callback}}{A function to call for each block of the standard
output and standard error. This callback is not line oriented, i.e.
multiple lines or half a line can be passed to the callback.}
    \item{\code{spinner}}{Whether to show a calming spinner on the screen while
the child R session is running. By default it is shown if
\code{show = TRUE} and the R session is interactive.}
    \item{\code{system_profile}}{Whether to use the system profile file.}
    \item{\code{user_profile}}{Whether to use the user's profile file.
If this is \code{"project"}, then only the profile from the working
directory is used, but the \code{R_PROFILE_USER} environment variable
and the user level profile are not. See also "Security considerations"
below.}
    \item{\code{env}}{Environment variables to set for the child process.}
    \item{\code{timeout}}{Timeout for the function call to finish. It can be a
\link[base:difftime]{base::difftime} object, or a real number, meaning seconds.
If the process does not finish before the timeout period expires,
then a \code{system_command_timeout_error} error is thrown. \code{Inf}
means no timeout.}
    \item{\code{wd}}{Working directory to use for running the command. Defaults
to the current working directory.}
    \item{\code{fail_on_status}}{Whether to throw an R error if the command returns
with a non-zero status code. By default no error is thrown.}
    \item{\code{color}}{Whether to use terminal colors in the child process,
assuming they are active in the parent process.}
  }}

\item{show}{Logical, whether to show the standard output on the screen
while the child process is running. Note that this is independent
of the \code{stdout} and \code{stderr} arguments. The standard
error is not shown currently.}
}
\value{
Invisibly returns the result of \code{\link[callr:rscript]{callr::rscript()}}
}
\description{
Execute the supplied R script in the context of the capsule library using
\code{\link[callr:rscript]{callr::rscript()}}. This ensures the script is executed in a new R process
that will not be contaminated by the state of the interactive development
environment and will use the R packages and versions in the capsule.
}
\seealso{
\code{\link[=run_callr]{run_callr()}} for more details relevant to \code{run_rscript()},
\code{\link[callr:r]{callr::r()}} for detailed calling semantics, \code{\link[=create]{create()}} to make the
lockfile. \code{\link[=run]{run()}} for a lighter weight alternative.
}
